/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.29
</auto-generated>
------------------------------------------------------------------------------ */

using Newtonsoft.Json;
using System;
using SpaceXWidget.Mvc.Models;
using SpaceXWidget.Mvc.ViewModels;
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using System.Net.Http;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.Personalization;
using System.Threading.Tasks;
using System.Net;

namespace SpaceXWidget.Mvc.Controllers
{
	[ControllerToolboxItem(Name = "FlightData_MVC", Title = "Space X Latest Flight Updated", SectionName = "SpaceX")]
	public class FlightDataController : Controller, IPersonalizable
	{
        List<string[]> aircraftInformation;
        List<string[]> aircraftInformationSafeCopy;
        public FlightDataController()
        {
            var flightDataModel = new FlightDataModel();
            aircraftInformation = flightDataModel.GetViewModel();
            aircraftInformationSafeCopy = aircraftInformation;            
        }

        // GET: FlightData
        public ActionResult Index()
		{
            ViewBag.aircraftInformation = aircraftInformation.OrderBy(x => x[1]).ToList();      
            return View(); 
		}

        public ActionResult OrderByFirstLetter(bool sortOrder)
        {         
            if (sortOrder)
            {
                aircraftInformation = aircraftInformation.OrderBy(x => x[1]).ToList();
            } else
            {
                aircraftInformation = aircraftInformation.OrderByDescending(x => x[1]).ToList();
            }
                
            ViewBag.aircraftInformation = aircraftInformation;
            return View("Index");
        }

        [HttpPost]
        public ActionResult SearchSpecificString(string searchString)
        {
            if (!String.IsNullOrEmpty(searchString))
            {
                aircraftInformation = aircraftInformation.Where(s => s[1].Contains(searchString)).ToList();
            }
         
            ViewBag.aircraftInformation = aircraftInformation;
            return View("Index");
        }

        public ActionResult LaunchDetails(string aircraftID)
        {
            bool IDExists = false;
            foreach (var aircraft in aircraftInformation)
            {
                if (aircraft[0] == aircraftID)
                {
                    IDExists = true;
                    break;
                }
            }

            if (!IDExists)
            {
                return View("NotFound");
            }

            var client = new HttpClient();                     
            var jsonString = (new WebClient()).DownloadString("https://api.spacexdata.com/v4/launches/" + aircraftID);
            var deserialiedViewModel = JsonConvert.DeserializeObject<LaunchViewModel>(jsonString);

            return View(deserialiedViewModel);           
        }

        public string Message { get; set; }
	}
}